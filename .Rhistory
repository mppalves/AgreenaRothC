a <- AgreenaRothC(lonlat, sim_period, inp_s = 0.2, cp_b = i, cp_s = j, till_b = "Till", till_s = "Till")
plotRothC(x = "baseline", a)
library(AggrenaRothC)
library(AgreenaRothC)
usethat::use_vignette("introduction")
devtools::use_vignette("introduction")
install.packages("usethat")
usethat::use_vignette("introduction")
install.packages("usethat")
library(usethat)
install.packages("usethis")
install.packages("usethis")
usethis::use_vignette("intro", "Basic example of hoe to run the model")
devtools::install()
?AgreenaRothC
??AgreenaRothC
devtools::document()
devtools::install()
??AgreenaRothC
devtools::install()
devtools::document()
devtools::install()
??Agre
sessionInfo()
devtools::document()
devtools::install()
??AgreenaRothC
library(AgreenaRothC)
??AgreenaRothC
lonlat <- c(9.302144386852655, 56.5691426133239)
sim_period <- c("2022-01-01", "2050-12-30")
dates <- c("1990-01-01", "2020-12-30")
wth <- get_wth_power_nasa(lonlat = lonlat, dates = dates)
wth
lon <- as.numeric(lonlat[1])
lat <- as.numeric(lonlat[2])
if(lon < -180 || lon > 180) stop("longitude should be between -180 and 180")
if(lat < -90 || lat > 90) stop("latitude should be between -90 and 90")
rest0 <- "https://rest.isric.org/soilgrids/v2.0/properties/query?lon="
rest1 <- paste0(rest0, lon, "&lat=", lat)
rest.properties <- paste("&property=bdod",
"property=soc",
"property=clay",
"property=sand",
"property=silt", sep = "&")
rest.depths <- paste("&depth=0-5cm", "depth=0-30cm", "depth=5-15cm",
"depth=15-30cm", "depth=30-60cm", "depth=60-100cm", "depth=100-200cm", sep = "&")
rest.statistic <- paste("&value", statistic, sep = "=")
statistic <-  "mean"
rest0 <- "https://rest.isric.org/soilgrids/v2.0/properties/query?lon="
rest1 <- paste0(rest0, lon, "&lat=", lat)
rest.properties <- paste("&property=bdod",
"property=soc",
"property=clay",
"property=sand",
"property=silt", sep = "&")
rest.depths <- paste("&depth=0-5cm", "depth=0-30cm", "depth=5-15cm",
"depth=15-30cm", "depth=30-60cm", "depth=60-100cm", "depth=100-200cm", sep = "&")
rest.statistic <- paste("&value", statistic, sep = "=")
rest.query <- paste0(rest1, rest.properties, rest.depths, rest.statistic)
rest.query
rest.data <- jsonlite::fromJSON(rest.query)
rest.data
rest.query
rest.query = "https://rest.isric.org/soilgrids/v2.0/properties/query?lon=8&lat=50&property=bdod&property=soc&property=clay&property=sand&property=silt&depth=0-5cm&depth=0-30cm&depth=5-15cm&depth=15-30cm&depth=30-60cm&depth=60-100cm&depth=100-200cm&value=mean"
rest.data <- jsonlite::fromJSON(rest.query)
rest.data
sp.nms <- rest.data$properties$layers[["name"]]
if(!all(sp.nms %in% c("bdod", "soc", "clay", "sand", "silt"))){
cat("Found these properties", sp.nms, "\n")
cat("Expected these properties", c("bdod", "soc", "clay", "sand", "silt"), "\n")
stop("soil properties names do not match")
}
bdod <- rest.data$properties$layers[1,3][[1]][,3]
clay <- rest.data$properties$layers[2,3][[1]][,3]
sand <- rest.data$properties$layers[3,3][[1]][,3]
silt <- rest.data$properties$layers[4,3][[1]][,3]
soc <- rest.data$properties$layers[5,3][[1]][,3]
if(any(is.na(soc))) stop("No soil data available for this location. Did you specify the coordinates correctly?")
retrieve_soil <- function(lon, lat, statistic) {
##  rest0 <- "https://rest.soilgrids.org/soilgrids/v2.0/properties/query?lon="
rest0 <- "https://rest.isric.org/soilgrids/v2.0/properties/query?lon="
rest1 <- paste0(rest0, lon, "&lat=", lat)
rest.properties <- paste("&property=bdod",
"property=soc",
"property=clay",
"property=sand",
"property=silt", sep = "&")
rest.depths <- paste("&depth=0-5cm", "depth=0-30cm", "depth=5-15cm",
"depth=15-30cm", "depth=30-60cm", "depth=60-100cm", "depth=100-200cm", sep = "&")
rest.statistic <- paste("&value", statistic, sep = "=")
rest.query <- paste0(rest1, rest.properties, rest.depths, rest.statistic)
rest.data <- jsonlite::fromJSON(rest.query)
}
sp.nms
lon
lat
# if(any(is.na(soc))) stop("No soil data available for this location. Did you specify the coordinates correctly?")
set.seed(123)
lon
set.seed(123)
n <- 10
c <- 0.001
lon <- runif(n, min = lon - c, max = lon + c)
lon
plot(lon)
plot(lon, lat)
lat <- runif(n, min = lat - c, max = lat + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(lon, lat)
sample(c(lat, lon))
sample(cbind(lat, lon))
expand.grid(lon, lat)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
# if(any(is.na(soc))) stop("No soil data available for this location. Did you specify the coordinates correctly?")
set.seed(123)
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
plot(expand.grid(lon, lat))
sample(lonlat_grid)
lonlat_grid <- expand.grid(lon, lat)
sample(lonlat_grid)
sample(1,lonlat_grid)
sample(lonlat_grid, 1)
sample.int(lonlat_grid, 1)
sample(1:100, 1)
set.seed(123)
n <- 100
c <- 0.001
lonlat_grid <- expand.grid(lon, lat)
lonlat_grid
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat_grid
1:n^2
lonlat <- lonlat_grid(sample(1:n^2, 1))
set.seed(123)
n <- 10
c <- 0.001
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid(sample(1:n^2, 1))
lonlat <- lonlat_grid[sample(1:n^2, 1)]
lonlat <- lonlat_grid[sample(1:n^2, 1),]
lonlat
lonlat <- as.vector(lonlat_grid[sample(1:n^2, 1),])
lonlat
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- as.vector(lonlat_grid[sample(1:n^2, 1),])
lonlat
lonlat <- vector(lonlat_grid[sample(1:n^2, 1),])
lonlat <- lonlat_grid[sample(1:n^2, 1),]
lonlat
lon <- as.numeric(lonlat[1])
lat <- as.numeric(lonlat[2])
lon
lat
rest.data <- retrieve_soil(lon, lat, statistic)
rest.data
soc <- rest.data$properties$layers[5,3][[1]][,3]
soc
any(is.na(soc))
c^2
sqrt(c)
curve(sqrt(x), 0, 1)
curve(sqrt(x), 0, 2)
curve(sqrt(x), 0, 10)
curve(x^2, 0, 10)
set.seed(123)
n <- 2
c <- 0.001
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
is.na(soc)
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat_grid
lonlat <- lonlat_grid[sample(1:n^2, 1),]
lon <- as.numeric(lonlat[1])
lat <- as.numeric(lonlat[2])
lon
lat
lonlat <- lonlat_grid[sample(1:n^2, n),]
lonlat
lonlat[1]
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[1][i])
lat <- as.numeric(lonlat[2][i])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
break
}
}
c <- sqrt(c)
}
soc <- NA
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[1][i])
lat <- as.numeric(lonlat[2][i])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
break
}
}
c <- sqrt(c)
}
any(is.na(soc))
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[1][i])
lat <- as.numeric(lonlat[2][i])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
break
}
}
i
lon <- as.numeric(lonlat[1][i])
lonlat
lonlat[1][i]
lonlat[1]
lonlat[i,1]
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
break
}
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
break
}
}
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
print("break")
break
}
}
print(c)
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
print("break")
break
}
}
c <- sqrt(c)
print(c)
}
soc <- NA
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
print("break")
break
}
}
c <- sqrt(c)
print(c)
}
soc <- NA
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
print("break")
break
}
}
print(c)
c <- sqrt(c)
}
c <- 0.001
soc <- NA
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
print("break")
break
}
}
print(c)
c <- sqrt(c)
}
lonlat <- c(7.020117, 55.691746)
set.seed(123)
n <- 2
c <- 0.001
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
soc <- NA
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
print("break")
break
}
}
print(c)
c <- sqrt(c)
}
lon <- as.numeric(lonlat[1])
lonlat <- c(7.020117, 55.691746)
lon <- as.numeric(lonlat[1])
lat <- as.numeric(lonlat[2])
set.seed(123)
n <- 10
c <- 0.001
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
soc <- NA
while (any(is.na(soc))) {
lon <- runif(n, min = lon - c, max = lon + c)
lat <- runif(n, min = lat - c, max = lat + c)
lonlat_grid <- expand.grid(lon, lat)
lonlat <- lonlat_grid[sample(1:n^2, n),]
for (i in 1:n) {
lon <- as.numeric(lonlat[i,1])
lat <- as.numeric(lonlat[i,2])
rest.data <- retrieve_soil(lon, lat, statistic)
soc <- rest.data$properties$layers[5,3][[1]][,3]
if (!any(is.na(soc))) {
print("break")
break
}
}
print(c)
c <- sqrt(c)
}
lon
lat
alist$SoilType <- paste("SoilType = ", txt_clss)
lonlat <- c(9.302144386852655, 56.5691426133239)
sim_period <- c("2022-01-01", "2050-12-30")
dates <- c("1990-01-01", "2020-12-30")
a <- AgreenaRothC(lonlat, sim_period, inp_s = 0.2, cp_b = i, cp_s = j, till_b = "Till", till_s = "Till")
i=T
j=T
till_b
till_b  = "Till"
till_s  = "Till"
a <- AgreenaRothC(lonlat, sim_period, inp_s = 0.2, cp_b = i, cp_s = j, till_b = "Till", till_s = "Till")
a
devtools::install()
a <- AgreenaRothC(lonlat, sim_period, inp_s = 0.2, cp_b = i, cp_s = j, till_b = "Till", till_s = "Till")
